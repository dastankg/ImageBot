services:
  db:
    image: postgres:16-alpine
    container_name: imagebot-database
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:alpine
    container_name: imagebot-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    env_file:
      - .env

  web:
    build: .
    container_name: imagebot-web
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./media:/app/media
    environment:
      DJANGO_SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_ENGINE: ${DB_ENGINE}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_URL: ${REDIS_URL}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    env_file:
      - .env

  tgbot:
    build: .
    container_name: imagebot-telegram
    working_dir: /app
    command: python tgbot/main.py
    volumes:
      - .:/app
    depends_on:
      - web
      - db
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: config.settings
    env_file:
      - .env

  tgbot2:
    build: .
    container_name: imagebot-telegram-agent
    working_dir: /app
    command: python tgbotAgent/main.py
    volumes:
      - .:/app
    depends_on:
      - web
      - db
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: config.settings
    env_file:
      - .env

volumes:
  postgres_data: