import os
import uuid

from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import ContentType, Message
import logging
from aiogram import F, Router, Bot

from bots.agents.fsm.fsm import UserState
from bots.agents.handlers.utils import get_user_profile, get_agent_by_phone, save_user_profile, schedule, download_photo, save_photo_to_post
from bots.agents.keyboards.keyboard import get_contact_keyboard, get_main_keyboard, get_location_keyboard, \
    get_back_keyboard, get_photo_keyboard

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    logger.info(f"/start –æ—Ç {message.from_user.id} ({message.from_user.full_name})")
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –º–∞–≥–∞–∑–∏–Ω–æ–≤.\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º, "
        "—á—Ç–æ–±—ã —è –º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.",
        reply_markup=get_contact_keyboard(),
    )
    await state.set_state(UserState.unauthorized)


@router.message(Command("help"))
@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def cmd_help(message: Message):
    await message.answer(
        "üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:</b>\n\n"
        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\n"
        "2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ¬ª\n"
        "3. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "5. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–∞–≥–∞–∑–∏–Ω–∞\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )


@router.message(Command("profile"))
@router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def cmd_profile(message: Message, state: FSMContext):
    user = await get_user_profile(message.from_user.id)
    if not user:
        await message.answer(
            "–í—ã –µ—â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.",
            reply_markup=get_contact_keyboard(),
        )
        await state.set_state(UserState.unauthorized)
        return

    agent = await get_agent_by_phone(user["phone_number"])
    if agent:
        await message.answer(
            f"üìä <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n"
            f"üë§ –ê–≥–µ–Ω—Ç: {agent.agent_name}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {agent.agent_number}",
            reply_markup=get_main_keyboard(),
        )
    else:
        await message.answer(
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user['phone_number']}\n\n"
            f"‚ùó –≠—Ç–æ—Ç –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ –∞–≥–µ–Ω—Ç–æ–≤."
        )


@router.message(F.content_type == ContentType.CONTACT)
async def handle_contact(message: Message, state: FSMContext):
    contact = message.contact
    phone_number = contact.phone_number
    telegram_id = message.from_user.id
    logger.info(f"–ö–æ–Ω—Ç–∞–∫—Ç –æ—Ç {telegram_id}: {phone_number}")
    if contact.user_id != telegram_id:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç.")
        return

    try:
        await save_user_profile(telegram_id, phone_number)

        await state.update_data(phone=phone_number)
        await state.set_state(UserState.authorized)

        agent = await get_agent_by_phone(phone_number)

        if agent:
            await message.answer(
                f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!\n\n"
                f"–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∞–≥–µ–Ω—Ç '{agent.agent_name}'.\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π.",
                reply_markup=get_main_keyboard(),
            )
        else:
            await message.answer(
                "‚ùå –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ.\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—Å –∫–∞–∫ –∞–≥–µ–Ω—Ç–∞."
            )
    except Exception as e:
        logger.error(f"Error in handle_contact: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∞—à–µ–≥–æ –Ω–æ–º–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )


@router.message(F.text == "üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ")
async def handle_upload_photo(message: Message, state: FSMContext):
    user = await get_user_profile(message.from_user.id)
    if not user:
        await message.answer(
            "–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.",
            reply_markup=get_contact_keyboard(),
        )
        await state.set_state(UserState.unauthorized)
        return

    await state.set_state(UserState.waiting_for_shopName)
    await schedule(message)


@router.message(UserState.waiting_for_shopName)
async def handle_shop_name(message: Message, state: FSMContext):
    if message.text == "üîô –ù–∞–∑–∞–¥":
        await state.set_state(UserState.authorized)
        await message.answer(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=get_main_keyboard(),
        )
        return

    shop_name = message.text

    if not shop_name or len(shop_name) > 100:
        await message.answer(
            "–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –ø—É—Å—Ç—ã–º –∏ –Ω–µ –±–æ–ª–µ–µ 100 —Å–∏–º–≤–æ–ª–æ–≤.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
            reply_markup=get_back_keyboard(),
        )
        return

    await state.update_data(shop_name=shop_name)
    await state.set_state(UserState.waiting_for_location)

    await message.answer(
        f"–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ '{shop_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.\n"
        f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –º–∞–≥–∞–∑–∏–Ω–∞.",
        reply_markup=get_location_keyboard(),
    )


@router.message(F.content_type == ContentType.LOCATION)
async def handle_location(message: Message, state: FSMContext):
    telegram_id = message.from_user.id
    user = await get_user_profile(telegram_id)

    if not user:
        await message.answer(
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.",
            reply_markup=get_contact_keyboard(),
        )
        await state.set_state(UserState.unauthorized)
        return

    state_data = await state.get_data()
    shop_name = state_data.get("shop_name")

    if not shop_name:
        await message.answer(
            "–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞.",
            reply_markup=get_main_keyboard(),
        )
        await state.set_state(UserState.waiting_for_shopName)
        return

    await state.update_data(
        location={
            "latitude": message.location.latitude,
            "longitude": message.location.longitude,
        }
    )
    await state.set_state(UserState.waiting_for_photo)

    await message.answer(
        f"üìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ '{shop_name}' –ø–æ–ª—É—á–µ–Ω–∞!\n\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–∞–≥–∞–∑–∏–Ω–∞.",
        reply_markup=get_photo_keyboard(),
    )

@router.message(F.content_type == ContentType.DOCUMENT)
async def handle_photo(message: Message, bot: Bot, state: FSMContext):
    telegram_id = message.from_user.id
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ –æ—Ç user_id={telegram_id}")

    try:
        user_profile = await get_user_profile(telegram_id)
        if not user_profile:
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {telegram_id}")
            await message.answer("–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.")
            await state.set_state(UserState.unauthorized)
            return

        state_data = await state.get_data()
        location = state_data.get("location")
        shop_name = state_data.get("shop_name")

        if not shop_name:
            logger.info(f"–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è user_id={telegram_id}")
            await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞.")
            await state.set_state(UserState.waiting_for_shopName)
            return

        if not location:
            logger.info(f"–ù–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è user_id={telegram_id}")
            await message.answer("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.")
            await state.set_state(UserState.waiting_for_location)
            return

        agent = await get_agent_by_phone(user_profile["phone_number"])
        if not agent:
            logger.warning(f"–ê–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: phone={user_profile['phone_number']}")
            await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∞–≥–µ–Ω—Ç.")
            return

        document = message.document
        file_id = document.file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path
        file_name = (
                document.file_name or f"{uuid.uuid4().hex}{os.path.splitext(file_path)[1]}"
        )

        logger.info(
            f"–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –æ—Ç {telegram_id}: file_id={file_id}, path={file_path}"
        )

        file_url = (
            f"https://api.telegram.org/file/bot{os.getenv('BOT_TOKEN2')}/{file_path}"
        )

        status_message = await message.answer("‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...")

        try:
            relative_path = await download_photo(file_url, file_name)
            await save_photo_to_post(
                agent.id,
                shop_name,
                relative_path,
                latitude=location["latitude"],
                longitude=location["longitude"],
            )

            logger.info(f"–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_name} –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_name}")

            await state.update_data(location=None, shop_name=None)
            await state.set_state(UserState.authorized)

            await bot.edit_message_text(
                f"‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ '{shop_name}'.",
                chat_id=status_message.chat.id,
                message_id=status_message.message_id,
            )

            await message.answer("–ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=get_main_keyboard())


        except Exception as e:
            error_message = str(e)
            logger.exception(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –æ—Ç {telegram_id}: {error_message}"
            )
            if "–±–æ–ª–µ–µ 3 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥" in error_message:
                await bot.edit_message_text(
                    "‚ùå –§–æ—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –±–æ–ª–µ–µ 3 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–µ–∂–µ–µ —Ñ–æ—Ç–æ.",
                    chat_id=status_message.chat.id,
                    message_id=status_message.message_id,
                )
            elif (
                    "EXIF –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" in error_message
                    or "–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" in error_message.lower()
            ):

                await bot.edit_message_text(
                    "‚ùå –§–æ—Ç–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (EXIF). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ –∫–∞–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
                    chat_id=status_message.chat.id,
                    message_id=status_message.message_id,
                )
            else:
                await bot.edit_message_text(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.",
                    chat_id=status_message.chat.id,
                    message_id=status_message.message_id,
                )

    except Exception:
        logger.exception(f"–û—à–∏–±–∫–∞ –≤ handle_photo –æ—Ç {telegram_id}")
        await message.answer("‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.")

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_command(message: Message, state: FSMContext):
    current_state = await state.get_state()

    if current_state in [
        UserState.waiting_for_location,
        UserState.waiting_for_photo,
        UserState.waiting_for_shopName,
    ]:
        await state.set_state(UserState.authorized)
        await state.update_data(location=None, shop_name=None)

    await message.answer(
        "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=get_main_keyboard(),
    )


@router.message()
async def unknown_message(message: Message, state: FSMContext):
    current_state = await state.get_state()

    if current_state == UserState.waiting_for_shopName:
        await handle_shop_name(message, state)
        return

    user = await get_user_profile(message.from_user.id)
    if not user:
        await message.answer(
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.",
            reply_markup=get_contact_keyboard(),
        )
        await state.set_state(UserState.unauthorized)
    else:
        await message.answer(
            "–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã. "
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é.",
            reply_markup=get_main_keyboard(),
        )
